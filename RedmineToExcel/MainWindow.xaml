<Window x:Class="RedmineToExcel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RedmineToExcel"
        xmlns:model="clr-namespace:Redmine.Models"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="RedmineToExcel" Height="800" MinHeight="800" Width="1200" MinWidth="1200">

    <materialDesign:DialogHost x:Name="dialogHost" Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="300">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />

                    <TreeView Grid.Row="1" MinWidth="220" x:Name="treeView" SelectedItemChanged="treeView_SelectedItemChanged">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                <Setter Property="IsExpanded" Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type model:ProjectData}" ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Name}" Margin="3 2" />
                            </HierarchicalDataTemplate>
                            <!--<DataTemplate DataType="{x:Type domain:Movie}">
                                <TextBlock Text="{Binding Name}" Margin="3 2" ToolTip="{Binding Director}" />
                            </DataTemplate>-->
                        </TreeView.Resources>
                    </TreeView>
                    <!--<TreeView x:Name="TreeView" MinWidth="220">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type model:ProjectData}" ItemsSource="{Binding Child}">
                                <TextBlock Text="{Binding name}" Margin="3 2" />
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type model:ProjectData}">
                                <TextBlock Text="{Binding name}" Margin="3 2" ToolTip="{Binding name}" />
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>-->




                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <Button Content="Hello World"/>
                                <Button Content="Nice Popup"/>
                                <Button Content="Can't Touch This" IsEnabled="False" />
                                <Separator/>
                                <Button Content="設定" Click="settingButton_Click"/>
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <ComboBox x:Name="versionComboBox" materialDesign:ComboBoxAssist.ClassicMode="True"  DockPanel.Dock="Right" Width="220" ItemsSource="{Binding displayVersionLists}" DisplayMemberPath="name" SelectedValuePath="id" SelectionChanged="versionComboBox_SelectionChanged" />

                        <TextBlock x:Name="Title" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" FontSize="22">RedmineToExcel</TextBlock>
                        <TextBlock x:Name="TermLabel" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" FontSize="22" />
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>


                    <!--<Button x:Name="issueLoadButton" Grid.Row="1" Grid.Column="1" Content="チケット読込→" VerticalAlignment="Center" Width="auto" Click="issueLoadButton_Click"/>-->

                    <!--<Label Grid.Row="0" Grid.Column="0" Content="プロジェクト一覧" FontSize="14" Margin="10,0"/>-->
                    <!--<Button x:Name="reloadButton" Content="再読込" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="75" Margin="0,0,10,0" Click="reloadButton_Click"/>-->

                    <!--<TreeView Name="treeView"  Grid.Row="1">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="local:Person">
                                <TextBlock Text="{Binding Name}" />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>-->




                    <!--<ListView x:Name="listView" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0"  >
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open in Browser" Click="ProjectOpenInBrowser_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" DisplayMemberBinding="{Binding id}" Width="40"/>
                                <GridViewColumn Header="プロジェクト名" DisplayMemberBinding="{Binding name}" Width="200"/>
                                <GridViewColumn Header="ステータス" DisplayMemberBinding="{Binding statusName}" Width="100"/>
                            </GridView>
                        </ListView.View>
                    </ListView>-->
                    <!--<CheckBox x:Name="showClosedProjectCheckBox" Grid.Row="2" Content="終了プロジェクトを含む" HorizontalAlignment="Left" Margin="10,2" VerticalAlignment="Top" Checked="closedProjectCheckBox_Checked" Unchecked="closedProjectCheckBox_Checked"/>-->


                    <!--<ItemsControl x:Name="IssueView" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" >
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                    <Border BorderThickness="0,0.5,0,0" BorderBrush="Gray" >
                                        <ItemsPresenter/>
                                    </Border>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="0,0,0,0.5" BorderBrush="Gray" >
                                    <local:TicketView></local:TicketView>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>-->
       

                    <ListView x:Name="issueListView" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,0"  >

                        <!--<ListView.Resources>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                --><!--<Style.Triggers>
                                    <DataTrigger Binding="{Binding isClosed}" Value="true">
                                    </DataTrigger>
                                </Style.Triggers>--><!--
                                <Setter Property="Background" Value="Gray" />
                            </Style>
                        </ListView.Resources>-->
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open in Browser" Click="IssueOpenInBrowser_Click"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding isClosed}" Value="true">
                                        <Setter Property="Background" Value="LightGray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="#" DisplayMemberBinding="{Binding id}" Width="80"/>
                                <GridViewColumn Header="親#" DisplayMemberBinding="{Binding parent.id}" Width="80"/>
                                <GridViewColumn Header="トラッカー" DisplayMemberBinding="{Binding tracker.name}" Width="120"/>
                                <GridViewColumn Header="ステータス" DisplayMemberBinding="{Binding status.name}" Width="100"/>
                                <GridViewColumn Header="題名" DisplayMemberBinding="{Binding subject}" Width="300"/>
                                <GridViewColumn Header="進捗率" DisplayMemberBinding="{Binding done_ratio, StringFormat='{}{0}%'}"  Width="80"/>
                                <GridViewColumn Header="担当者" DisplayMemberBinding="{Binding assignedUser}" Width="100"/>
                                <GridViewColumn Header="開始日" DisplayMemberBinding="{Binding startDateString}" Width="100"/>
                                <GridViewColumn Header="終了日" DisplayMemberBinding="{Binding dueDateString}" Width="100"/>
                                <GridViewColumn Header="Ver" DisplayMemberBinding="{Binding fixed_version.name}" Width="100"/>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">

                            <Button x:Name="ReloadButton" Padding="5" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="ReloadButton_Click">
                                <Viewbox>
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,12H22.32L17.37,16.95L12.42,12H16.97C17,10.46 16.42,8.93 15.24,7.75C12.9,5.41 9.1,5.41 6.76,7.75C4.42,10.09 4.42,13.9 6.76,16.24C8.6,18.08 11.36,18.47 13.58,17.41L15.05,18.88C12,20.69 8,20.29 5.34,17.65C2.22,14.53 2.23,9.47 5.35,6.35C8.5,3.22 13.53,3.21 16.66,6.34C18.22,7.9 19,9.95 19,12Z" Fill="White" />
                                    </Canvas>
                                </Viewbox>
                            </Button>
                        
                            <CheckBox Grid.Column="2" Grid.Row="2" x:Name="showClosedIssueCheckBox" Content="終了チケットを含む" HorizontalAlignment="Left" Margin="10,2" VerticalAlignment="Center" Checked="closedIssueCheckBox_Checked" Unchecked="closedIssueCheckBox_Checked"/>
                            <CheckBox Grid.Column="2" Grid.Row="2" x:Name="showSubProjectIssueCheckBox"  Content="サブプロジェクトを含む" HorizontalAlignment="Left" Margin="10,2" VerticalAlignment="Center" Checked="showSubProjectIssueCheckBox_Checked" Unchecked="showSubProjectIssueCheckBox_Checked"/>
                    
                    </StackPanel>

                    <Button x:Name="issueLoadButton2" Grid.Column="2" Content="Execl出力" Margin="10,0" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100" Click="OutputExcel_Click"/>


                    </Grid>


                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>




</Window>
